<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Networking | Charles Hooper]]></title>
  <link href="http://www.charleshooper.net/blog/categories/networking/atom.xml" rel="self"/>
  <link href="http://www.charleshooper.net/"/>
  <updated>2013-07-18T23:37:39-07:00</updated>
  <id>http://www.charleshooper.net/</id>
  <author>
    <name><![CDATA[Charles Hooper]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Link Aggregation on Cisco Catalysts &#038; Foundry switches]]></title>
    <link href="http://www.charleshooper.net/blog/link-aggregation-on-cisco-catalysts-foundry-switches/"/>
    <updated>2009-12-04T00:00:00-08:00</updated>
    <id>http://www.charleshooper.net/blog/link-aggregation-on-cisco-catalysts-foundry-switches</id>
    <content type="html"><![CDATA[<h1></h1>

<p>LACP, or <strong>Link Aggregation Control Protocol</strong>, allows you to configure multiple ethernet ports to act as a single device. This is sometimes referred to as <strong>channel bonding</strong> or <strong>trunking</strong>. Link Aggregation provides several benefits: <em>Increased bandwidth</em>, <em>load balancing</em>, and allows you to create <em>redundant ethernet links</em>. If a link in your ethernet channel goes down, the switches, routers, or servers you have configured to use LACP will automatically fail over to the links that are still up and remain connected. With the right hardware and the right firmware, setting this up is very simple.
On a Cisco Catalyst switch running IOS, once logged in, you will need to perform the following steps:</p>

<p><code>
cisco&gt;enable  
Password: *enter password*  
cisco#config term  
cisco(config)#int Gi0/1  
cisco(config-if)#channel-group 1 mode active  
cisco(config-if)#channel-protocol lacp  
cisco(config-if)#int Gi0/2  
cisco(config-if)#channel-group 1 mode active  
cisco(config-if)#channel-protocol lacp  
cisco(config-if)#end  
cisco#write mem
</code></p>

<p>It also helps to label your ports and to be sure that your bonded ports
are configured in the right VLAN or set up for <em>VLAN trunking</em>.  If your
other device is another Cisco Catalyst, then just repeat the steps
above, connect your newly bonded ports, and disconnect any non-bonded
ports connecting the two devices.  However, if you are configuring a
Foundry switch, your configuration is just as easy, but slightly
different.</p>

<p><code>
BR-telnet@foundry&gt;enable  
Password: *enter password*  
BR-telnet@foundry#config term  
BR-telnet@foundry(config)#interface ethernet 1  
BR-telnet@foundry(config-if-e1000-1)#link-aggregate active  
BR-telnet@foundry(config-if-e1000-1)#interface ethernet 2  
BR-telnet@foundry(config-if-e1000-2)#link-aggregate active  
BR-telnet@foundry(config-if-e1000-2)#end  
BR-telnet@foundry#write mem
</code></p>

<p>Provided you don’t have a complicated VLAN set up, you’re all set! One
thing you should note about the Foundry devices, is that you can only
<em>start</em> your trunked ports on the first port of each group of 4.
Explanation: On a 12-port switch, you would only be able to start port
groups on ports 1, 5, and 9. But this does <em>not</em> mean that you can’t
bond ports 1 &amp; 2 — but it does mean that you can’t bond ports 3 &amp; 4.</p>

<p><strong>Recommended reading:</strong>
*   <a href="http://www.cisco.com/en/US/docs/switches/lan/catalyst3550/software/release/12.1_13_ea1/configuration/guide/swethchl.html#wp1033981">Configuring EtherChannels on the Cisco Catalyst 3550</a>
*   <a href="http://www.foundrynetworks.co.jp/services/documentation/sribcg/Trunking.html">Foundry Switch and Router Installation and Basic Configuration — Dynamic Link Aggregation</a>
*   <a href="http://en.wikipedia.org/wiki/IEEE_802.3ad">Link aggregation article on Wikipedia</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Link Aggregation on a RedHat (CentOS) server and a Cisco Catalyst switch]]></title>
    <link href="http://www.charleshooper.net/blog/link-aggregation-on-a-redhat-centos-server-and-a-cisco-catalyst-switch/"/>
    <updated>2009-12-04T00:00:00-08:00</updated>
    <id>http://www.charleshooper.net/blog/link-aggregation-on-a-redhat-centos-server-and-a-cisco-catalyst-switch</id>
    <content type="html"><![CDATA[<h1></h1>

<p>IEEE 802.3ad, more commonly known as <strong>Link Aggregation</strong>, allows you to configure multiple Ethernet ports to act as a single device. This is sometimes referred to as <strong>channel bonding</strong>, <strong>Ethernet bonding</strong>, or <strong>trunking</strong>. Link Aggregation provides several benefits: <em>Increased bandwidth</em>, <em>load balancing</em>, and allows you to create <em>redundant ethernet links</em>. If a link in your ethernet channel goes down, the switches, routers, or servers you have configured to use LACP will automatically fail over to the links that are still up and remain connected. On a RedHat-based Linux distribution, such as CentOS or Fedora, the configuration may look a little complex, but in fact, it is very straight-forward.</p>

<p>To enable EtherChannel bonding on your RedHat-based server, follow these four easy steps:</p>

<p><strong>1.</strong> First, create/replace <code>/etc/sysconfig/network-scripts/ifcfg-bond0</code> with:</p>

<pre><code>DEVICE=bond0
ONBOOT=yes
USERCTL=no
</code></pre>

<p>This file is also where you will configure your interface options, such as your IP address or if you will be using DHCP to obtain that information automatically. You can find more information on this in the RedHat Linux manual section <a href="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/ref-guide/s1-networkscripts-interfaces.html">Interface Configuration Files</a>.</p>

<p><strong>2.</strong> Next, for each interface you want bonded, create the file (and backup any already-existing ones) <code>/etc/sysconfig/network-scripts/ifcfg-ethX</code>, where <em>X</em> is the number of the interface, for example: eth0 and eth1. Check the output of <code>dmesg</code> or <code>ifconfig</code> if you are confused.</p>

<p>In each of these files, put the following lines:</p>

<pre><code>DEVICE=ethX
ONBOOT=yes
MASTER=bond0
SLAVE=yes
USERCTL=no
</code></pre>

<p>Once again, instead of an <em>X</em> you will want to replace that with the number of the interface.</p>

<p><strong>3.</strong> Add the following text to <code>/etc/modprobe.conf</code> on a line by itself: <code>alias bond bonding</code>. Now would also probably be a good time to review your firewall rules and configuration files, to change any interface-specific directives to refer to “bond0″ now instead of “eth0″, or whatever it may have been before.</p>

<p><strong>4.</strong> Restart your networking scripts. As root, issue the following command: <code>service network restart</code></p>

<p>At this point you may lose connectivity. Do not panic! This is because we have configured the server to use EtherChannel bonding, but we have not told the switch we were going to do so.</p>

<p>On a Cisco Catalyst switch running IOS, once logged in, you enable EtherChannel bonding by performing the following steps. These steps assume that both interfaces are configured in the same (and correct) VLAN, and have the same speed and duplex settings.</p>

<pre><code>cisco&gt;enable
Password: *enter password*
cisco#config term
cisco(config)#int Fa0/1
cisco(config-if)#channel-group 1 mode on
cisco(config-if)#int Fa0/2
cisco(config-if)#channel-group 1 mode on
cisco(config-if)#end
cisco#write mem
</code></pre>

<p>It also helps to label your ports. It is important to understand that your bonded interfaces do <em>not</em> need to be consecutive ports on the switch, but consolidating them to one location on the switch is good for organizational purposes.</p>

<p>Now you are free to plug in your additional cables and enjoy your new redundant Ethernet links!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EtherChannel trunking between a Foundry switch and Cisco Catalyst]]></title>
    <link href="http://www.charleshooper.net/blog/etherchannel-trunking-between-a-foundry-switch-and-cisco-catalyst/"/>
    <updated>2009-12-04T00:00:00-08:00</updated>
    <id>http://www.charleshooper.net/blog/etherchannel-trunking-between-a-foundry-switch-and-cisco-catalyst</id>
    <content type="html"><![CDATA[<h1></h1>

<p>In my other article, <a href="http://charleshooper.posterous.com/link-aggregation-on-cisco-catalysts-and-found">LACP on Cisco Catalysts &amp; Foundry switches</a>, I describe how to configure aggregated links using LACP (802.3ad) on a Cisco Catalyst and Foundry switch. In this howto, I will be describing how to configure trunked ports using <strong>EtherChannel</strong> — LACP’s predecessor.</p>

<p>Before starting, one thing that you should be aware of is that Foundry’s configure EtherChannel trunks as dot1q-encapsulated VLAN trunks by default. Cisco Catalysts (or IOS, rather) configure all ports as access ports by default.</p>

<p>On a Cisco Catalyst switch running IOS, once logged in, you will need to perform the steps below. It is important that you perform these steps without the other device connected.</p>

<pre><code>cisco&gt;enable
Password: *enter password*
cisco#config term
cisco(config)#int Gi0/1
cisco(config-if)#channel-group 1 mode on
cisco(config-if)#int Gi0/2
cisco(config-if)#channel-group 1 mode on
cisco(config-if)#end
cisco#write mem
</code></pre>

<p>If your other device is another Cisco Catalyst, then just repeat the steps above, connect your newly bonded ports, and disconnect any non-bonded ports connecting the two devices.</p>

<p>If you are configuring a Foundry switch, there are <a href="http://www.foundrynetworks.co.jp/services/documentation/sribcg/Trunking.html">several rules you must follow</a>. Among these rules, is that you can only <em>start</em> your trunked ports on the first port of each group of 4.</p>

<pre><code>BR-telnet@foundry&gt;enable
Password: *enter password*
BR-telnet@foundry#config term
BR-telnet@foundry(config)#trunk ethe 1 to 2
BR-telnet@foundry(config)#trunk deploy
BR-telnet@foundry(config)#exit
BR-telnet@foundry#write mem
</code></pre>

<p>Provided you correctly configured your VLANs prior to setting up EtherChannel, you may connect your cables starting with the <em>primary port</em>. The primary port is always the lowest-numbered port in the trunk, in our example, this is 1. Once connected, you can verify operation of your EtherChannel trunk with <code>show etherchannel summary</code> on the Cisco or <code>show trunk</code> on the Foundry in enable mode.</p>
]]></content>
  </entry>
  
</feed>
